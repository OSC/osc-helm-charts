apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus.fullname" . }}
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "prometheus.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
      - name: {{ include "osc.common.imagePullSecret.name" . }}
      serviceAccountName: {{ include "prometheus.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - --config.file=/config/{{ .Values.config.name }}
          - --web.listen-address=0.0.0.0:{{ .Values.service.port }}
          - --storage.tsdb.path=/data
          - --storage.tsdb.retention.time=30d
          - --web.enable-lifecycle
          volumeMounts:
          - mountPath: /config
            name: config
            readOnly: true
          - mountPath: /data
            name: data-dir
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 5
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-watch
          securityContext:
            {{- toYaml .Values.watch.securityContext | nindent 12 }}
          image: "{{ .Values.watch.image.repository }}:{{ .Values.watch.image.tag }}"
          imagePullPolicy: {{ .Values.watch.image.pullPolicy }}
          args: ["-v", "-t", "-p=/config", "curl", "-X", "POST", "--fail", "-o", "-", "-sS", "http://localhost:{{ .Values.service.port }}/-/reload"]
          volumeMounts:
          - mountPath: /config
            name: config
            readOnly: true
          {{- with .Values.watch.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "prometheus.fullname" . }}-config
            items:
            - key: {{ .Values.config.name }}
              path: {{ .Values.config.name }}
        - name: data-dir
        {{- if .Values.storageClassName }}
          persistentVolumeClaim:
            claimName: {{ include "prometheus.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
