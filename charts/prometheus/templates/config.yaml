apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "prometheus.fullname" . }}-config
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
data:
  {{ .Values.config.name }}: |
    ---
    global:
      scrape_interval: 1m
      scrape_timeout: 10s
      evaluation_interval: 1m
    scrape_configs:
    - job_name: kubernetes-nodes
      scheme: https
      metrics_path: /metrics
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - source_labels: [__meta_kubernetes_node_name]
        regex: '(.+)'
        replacement: '$1'
        target_label: host
      - regex: "feature_node_.+"
        action: labeldrop
      - regex: "nvidia_com_.+"
        action: labeldrop
      - regex: "cluster"
        action: labeldrop
    - job_name: kubernetes-cadvisor
      scheme: https
      metrics_path: /metrics/cadvisor
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - source_labels: [__meta_kubernetes_node_name]
        regex: '(.+)'
        replacement: '$1'
        target_label: host
      - regex: "feature_node_.+"
        action: labeldrop
      - regex: "nvidia_com_.+"
        action: labeldrop
      - regex: "cluster"
        action: labeldrop
    - job_name: kubernetes-api-server
      scheme: https
      metrics_path: /metrics
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
    - job_name: kubernetes-kube-proxy
      scheme: http
      metrics_path: /metrics
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - source_labels: [__address__]
        action: replace
        target_label: __address__
        regex: '([^:]+)(?::\d+)?'
        replacement: '$1:10249'
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - source_labels: [__meta_kubernetes_node_name]
        regex: '(.+)'
        replacement: '$1'
        target_label: host
      - regex: "feature_node_.+"
        action: labeldrop
      - regex: "nvidia_com_.+"
        action: labeldrop
      - regex: "cluster"
        action: labeldrop
    - job_name: kubernetes-services
      scheme: http
      metrics_path: "/probe"
      kubernetes_sd_configs:
      - role: service
      params:
        module:
        - tcp_connect
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace,__meta_kubernetes_service_label_job]
        action: drop
        regex: "^user-.+;.+"
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe_skip]
        action: drop
        regex: 'true'
      - source_labels: [__meta_kubernetes_service_port_protocol]
        action: keep
        regex: TCP
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: {{ .Values.blackboxExporter.name }}.{{ .Release.Namespace }}.svc.{{ .Values.dnsDomain }}:{{ .Values.blackboxExporter.service.port }}
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe_module]
        regex: "(.+)"
        replacement: "$1"
        target_label: __param_module
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe_scheme,__param_target]
        regex: "(.+);(.+)"
        replacement: '${1}://${2}'
        target_label: __param_target
      - source_labels: [__param_target,__meta_kubernetes_service_annotation_prometheus_io_probe_path]
        regex: "(.+);(.+)"
        replacement: '${1}${2}'
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_name
      - regex: "app_kubernetes_io_(managed_by|version)"
        action: labeldrop
      - regex: "helm_sh_chart"
        action: labeldrop
    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
      - role: service
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: 'true'
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: '(.+)'
      - source_labels: [__address__,__meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: '([^:]+)(?::\d+)?;(\d+)'
        replacement: '$1:$2'
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: kubernetes_name
      - source_labels: [kubernetes_name,__meta_kubernetes_service_port_name]
        regex: '(.+);(.+)'
        replacement: '$1:$2'
        target_label: instance
      - source_labels: [kubernetes_name,__meta_kubernetes_service_port_name,__address__]
        regex: '(.+);;([^:]+):(\d+)?'
        replacement: '$1:$3'
        target_label: instance
      - source_labels: [instance]
        target_label: host
      - regex: "app_kubernetes_io_(managed_by|version)"
        action: labeldrop
      - regex: "helm_sh_chart"
        action: labeldrop
    - job_name: kubernetes-pod-endpoints
      metrics_path: /metrics
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: 'true'
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port,__meta_kubernetes_pod_container_port_number]
        action: keep
        regex: '(.+);(.+)'
      - source_labels: [__meta_kubernetes_pod_container_port_protocol]
        action: keep
        regex: 'TCP'
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: '(.+)'
      - source_labels: [__address__,__meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: '([^:]+)(?::\d+)?;(\d+)'
        replacement: '$1:$2'
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: kubernetes_name
      - source_labels: [kubernetes_name,__meta_kubernetes_pod_annotation_prometheus_io_port]
        regex: '(.+);(.+)'
        replacement: '$1:$2'
        target_label: instance
    - job_name: kubernetes-ingress-probe
      scrape_timeout: 60s
      scrape_interval: 3m
      scheme: http
      metrics_path: /probe
      params:
        module:
          - https
      kubernetes_sd_configs:
      - role: ingress
      relabel_configs:
      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
        regex: (.+);(.+);(.+)
        replacement: ${1}://${2}${3}
        target_label: __param_target
      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_annotation_prometheus_io_probe_path]
        regex: (.+);(.+);(.+)
        replacement: ${1}://${2}${3}
        target_label: __param_target
      - source_labels: [__meta_kubernetes_ingress_scheme]
        regex: (.+)
        replacement: ${1}
        target_label: __param_module
      - target_label: __address__
        replacement: {{ .Values.blackboxExporter.name }}.{{ .Release.Namespace }}.svc.{{ .Values.dnsDomain }}:{{ .Values.blackboxExporter.service.port }}
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_ingress_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_ingress_name]
        target_label: kubernetes_name
      - regex: "app_kubernetes_io_(managed_by|version)"
        action: labeldrop
      - regex: "helm_sh_chart"
        action: labeldrop
    - job_name: kubernetes-ingress-ssl
      scrape_timeout: 60s
      scrape_interval: 3m
      scheme: http
      metrics_path: /probe
      params:
        module:
          - https
      kubernetes_sd_configs:
      - role: ingress
      relabel_configs:
      - source_labels: [__meta_kubernetes_ingress_scheme]
        action: keep
        regex: https
      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
        regex: (.+);(.+);(.+)
        replacement: ${1}://${2}${3}
        target_label: __param_target
      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_annotation_prometheus_io_probe_path]
        regex: (.+);(.+);(.+)
        replacement: ${1}://${2}${3}
        target_label: __param_target
      - target_label: __address__
        replacement: {{ .Values.sslExporter.name }}.{{ .Release.Namespace }}.svc.{{ .Values.dnsDomain }}:{{ .Values.sslExporter.service.port }}
      - source_labels: [__param_target]
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_ingress_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_ingress_name]
        target_label: kubernetes_name
      - regex: "app_kubernetes_io_(managed_by|version)"
        action: labeldrop
      - regex: "helm_sh_chart"
        action: labeldrop
    - job_name: kube-state-metrics
      metrics_path: /metrics
      static_configs:
      - targets:
        - {{ index .Values "kube-state-metrics" "fullnameOverride" }}.{{ template "kube-state-metrics.namespace" . }}.svc.{{ .Values.dnsDomain }}:{{ index .Values "kube-state-metrics" "service" "port" }}
    - job_name: kube-state-metrics-telemetry
      metrics_path: /metrics
      static_configs:
      - targets:
        - {{ index .Values "kube-state-metrics" "fullnameOverride" }}.{{ template "kube-state-metrics.namespace" . }}.svc.{{ .Values.dnsDomain }}:{{ index .Values "kube-state-metrics" "selfMonitor" "telemetryPort" }}
