apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: pod-account-validation
spec:
  background: false
  validationFailureAction: Enforce
  rules:
  - name: pods-user-account-prefix
    match:
      any:
        - resources:
            kinds:
            - Pod
            namespaces:
            - "user-?*"
        - resources:
            kinds:
            - Pod
            namespaceSelector:
              matchExpressions:
              - key: osc.edu/role
                operator: In
                values:
                - paas
    validate:
      message: "{{`{{ request.object.metadata.namespace }}`}} account {{`{{ request.object.metadata.labels.account }}`}} is not a valid project"
      pattern:
        metadata:
          labels:
            account: "P?*"
  - name: pods-user-authorized-for-account
    match:
      any:
        - resources:
            kinds:
            - Pod
            namespaces:
            - "user-?*"
    preconditions:
    - key: "{{`{{ request.operation }}`}}"
      operator: In
      value: ["CREATE","UPDATE"]
    - key: "{{`{{ request.object.metadata.labels.account || '' }}`}}"
      operator: NotEquals
      value: ""
    context:
    - name: userGroupMap
      configMap:
        name: user-groups-map
        namespace: k8-ldap-configmap
    validate:
      message: "{{`{{ request.object.metadata.namespace }}`}} not authorized to charge against account {{`{{ request.object.metadata.labels.account }}`}}"
      deny:
        conditions:
        - key: "{{`{{ request.object.metadata.labels.account }}`}}"
          operator: NotIn
          value: "{{`{{ userGroupMap.data.\"{{ request.object.metadata.namespace }}\" }}`}}"
  - name: paas-user-authorized-for-account
    match:
      any:
        - resources:
            kinds:
            - Pod
            namespaceSelector:
              matchExpressions:
              - key: osc.edu/role
                operator: In
                values:
                - paas
    preconditions:
    - key: "{{`{{ request.operation }}`}}"
      operator: In
      value: ["CREATE","UPDATE"]
    - key: "{{`{{ request.object.metadata.labels.account || '' }}`}}"
      operator: NotEquals
      value: ""
    - key: "{{`{{ serviceAccount }}`}}"
      operator: NotEquals
      value: ""
    context:
    - name: serviceAccount
      apiCall:
        urlPath: "/api/v1/namespaces/{{`{{ request.namespace }}`}}"
        jmesPath: "metadata.labels.\"{{ include "osc.common.serviceAccountKey" . }}\" || ''"
    - name: userGroupMap
      configMap:
        name: user-groups-map
        namespace: k8-ldap-configmap
    validate:
      message: "{{`{{ serviceAccount }}`}} not authorized to charge against account {{`{{ request.object.metadata.labels.account }}`}}"
      deny:
        conditions:
        - key: "{{`{{ request.object.metadata.labels.account }}`}}"
          operator: NotIn
          value: "{{`{{ userGroupMap.data.\"user-{{ serviceAccount }}\" }}`}}"
