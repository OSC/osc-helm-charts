{{ $null := required "Must provide serviceAccount" (include "webservice.serviceAccount" .) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webservice.name" . }}
  labels:
    osc.edu/service-account: {{ include "webservice.serviceAccount" . }}
    {{- include "webservice.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "webservice.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  template:
    metadata:
      labels:
        osc.edu/service-account: {{ include "webservice.serviceAccount" . }}
        {{- include "webservice.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "webservice.name" . }}
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: false
      hostIPC: false
      hostPID: false
      containers:
      - name: {{ include "webservice.name" . }}
        image: "{{ .Values.image.repository }}:{{ tpl (include "webservice.imageTag" .) . }}"
        {{- if eq (tpl (include "webservice.imageTag" .) .) "latest" }}
        imagePullPolicy: Always
        {{- else }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- end }}
        {{- with .Values.command }}
        command: {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- $args := concat .Values.args (index .Values "defaultArgs" .Values.defaultArgs.type) }}
        {{- if $args }}
        args:
        {{- range $args }}
        - {{ tpl . $ }}
        {{- end }}
        {{- end }}
        {{- if or .Values.env .Values.database.enable }}
        env:
        {{- if .Values.database.password }}
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "webservice.name" . }}
              key: database-password
        {{- end }}
        {{- if .Values.database.url }}
        - name: DATABASE_URL
          value: {{ tpl .Values.database.url . }}
        {{- end }}
        {{- with .Values.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.port }}
          name: http
        volumeMounts:
        {{- if .Values.mounts.home }}
          - name: home
            mountPath: {{ tpl .Values.mounts.home . }}
        {{- end }}
        {{- range $name, $path := .Values.mounts.roDir }}
          - name: {{ $name }}
            mountPath: {{ $path }}
            readOnly: true
        {{- end }}
        {{- range $name, $path := .Values.mounts.socket }}
          - name: {{ $name }}
            mountPath: {{ $path }}
        {{- end }}
        livenessProbe: {{ toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe: {{ toYaml .Values.readinessProbe | nindent 10 }}
        resources: {{ toYaml .Values.podResources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
          privileged: false
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.mounts.home }}
        - name: home
          hostPath:
            path: {{ tpl .Values.mounts.home . }}
            type: Directory
        {{- end }}
        {{- range $name, $path := .Values.mounts.roDir }}
        - name: {{ $name }}
          hostPath:
            path: {{ $path }}
            type: Directory
        {{- end }}
        {{- range $name, $path := .Values.mounts.socket }}
        - name: {{ $name }}
          hostPath:
            path: {{ $path }}
            type: Socket
        {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "webservice.name" . }}
              topologyKey: kubernetes.io/hostname
