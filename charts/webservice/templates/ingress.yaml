{{ $root := . }}
{{ range $idx, $container := .Values.containers }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "webservice.name" $root }}-{{ tpl $container.name $root }}
  labels:
    {{- include "webservice.labels" $root | nindent 4 }}
  {{- if (include "webservice.alert.receiver" $root) }}
    receiver: {{ include "webservice.alert.receiver" $root }}
  {{- end }}
  annotations:
    {{- if $root.Values.auth.enable }}
    prometheus.io/probe_scheme: 'https'
    {{- end }}
    {{- if not $root.Values.auth.enable }}
    cert-manager.io/cluster-issuer: letsencrypt
    {{- end }}
    {{- with $root.Values.ingress.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if and (ne $container.auth false) (eq $root.Values.auth.enable true) }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    {{- end }}
    {{- if (include "webservice.ingressHostAlias" $root) }}
    nginx.ingress.kubernetes.io/server-alias: {{ tpl (include "webservice.ingressHostAlias" $root) $root }}
    {{- end }}
    {{- if eq $root.Values.appType "rshiny" }}
      {{- toYaml $root.Values.ingress.rShinyAnnotations | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ $root.Values.ingress.className }}
{{- if or (eq $container.auth false) (eq $root.Values.auth.enable false) }}
  tls:
  - hosts:
    - {{ required "Must provide ingress host" (tpl (include "webservice.ingressHost" $root) $root) | quote }}
  {{- if (include "webservice.ingressHostAlias" $root) }}
    - {{ tpl (include "webservice.ingressHostAlias" $root) $root | quote }}
  {{- end }}
    secretName: {{ include "webservice.name" $root }}-{{ tpl $container.name $root }}-cert
{{- end }}
  rules:
  - host: {{ tpl (include "webservice.ingressHost" $root) $root | quote }}
    http:
      paths:
      - path: {{ $container.ingressPath }}
        pathType: Prefix
        backend:
          service:
            name: {{ include "webservice.name" $root }}
            port:
              number: {{ $container.port | default (add $root.Values.service.port $idx) }}
{{ end }}
