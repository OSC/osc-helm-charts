apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "webservice.name" . }}
  labels:
    {{- include "webservice.labels" . | nindent 4 }}
  {{- if (include "webservice.alert.receiver" .) }}
    receiver: {{ include "webservice.alert.receiver" . }}
  {{- end }}
  annotations:
    {{- if .Values.auth.enable }}
    prometheus.io/probe_scheme: 'https'
    {{- end }}
    {{- if not .Values.auth.enable }}
    cert-manager.io/cluster-issuer: letsencrypt
    {{- end }}
    {{- with .Values.ingress.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- if .Values.auth.enable }}
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    {{- end }}
    {{- if (include "webservice.ingressHostAlias" .) }}
    nginx.ingress.kubernetes.io/server-alias: {{ tpl (include "webservice.ingressHostAlias" .) . }}
    {{- end }}
    {{- if eq .Values.appType "rshiny" }}
      {{- toYaml .Values.ingress.rShinyAnnotations | nindent 4 }}
    {{- end }}
spec:
{{- if not .Values.auth.enable }}
  tls:
  - hosts:
    - {{ required "Must provide ingress host" (tpl (include "webservice.ingressHost" .) .) | quote }}
  {{- if (include "webservice.ingressHostAlias" .) }}
    - {{ tpl (include "webservice.ingressHostAlias" .) . | quote }}
  {{- end }}
    secretName: {{ include "webservice.name" . }}-cert
{{- end }}
  rules:
  - host: {{ tpl (include "webservice.ingressHost" .) . | quote }}
    http:
      paths:
      {{- $root := . }}
      {{- range $idx, $container := .Values.containers }}
      - path: {{ $container.ingressPath }}
        pathType: Prefix
        backend:
          service:
            name: {{ include "webservice.name" $root }}
            port:
              number: {{ $container.port | default (add $root.Values.service.port $idx) }}
      {{- end }}
