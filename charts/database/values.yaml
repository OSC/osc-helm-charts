global:
  imagePullSecret:
    name: osc-registry
    registry: docker-registry.osc.edu
    username: robot$webservices-read
    password:
  nodeSelectorRole: webservices
  storageClass: webservices-nfs-client
  imageRegistry: docker-registry.osc.edu
  imagePullSecrets:
    - osc-registry
imagePullSecret:
  enable: true
mariadb:
  enable: false
  image:
    repository: kubernetes/bitnami/mariadb
    tag: 10.5.13-debian-10-r58
  primary:
    podLabels:
      '{{ include "osc.common.serviceAccountKey" . }}': '{{ include "osc.common.serviceAccountValue" . }}'
    containerSecurityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
      privileged: false
    resources:
      limits:
        cpu: 4
        memory: 4Gi
      requests:
        cpu: 1
        memory: 256Mi
    nodeSelector:
      '{{ include "osc.common.nodeSelectorRoleKey" . }}': ''
  volumePermissions:
    image:
      repository: kubernetes/bitnami/bitnami-shell
      tag: 11-debian-11-r61
  metrics:
    enabled: true
    image:
      repository: kubernetes/bitnami/mysqld-exporter
      tag: 0.14.0-debian-11-r67
    containerSecurityContext:
      enabled: true
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
      privileged: false
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: /metrics
      prometheus.io/match_metrics: 'true'
    resources:
      limits:
        cpu: 2
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 128Mi
  networkPolicy:
    enabled: true
    ingressRules:
      primaryAccessOnlyFrom:
        enabled: true
        podSelector: {}
    metrics:
      enabled: true
      namespaceSelector:
        app.kubernetes.io/name: prometheus
postgresql:
  enabled: false
  image:
    repository: kubernetes/bitnami/postgresql
    tag: 14.4.0-debian-11-r18
  primary:
    podLabels:
      '{{ include "osc.common.serviceAccountKey" . }}': '{{ include "osc.common.serviceAccountValue" . }}'
    containerSecurityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
      privileged: false
    resources:
      limits:
        cpu: '4'
        memory: 4Gi
      requests:
        cpu: '1'
        memory: 256Mi
    nodeSelector:
      '{{ include "osc.common.nodeSelectorRoleKey" . }}': ''
    initContainers:
    - name: init-data
      image: '{{ include "postgresql.volumePermissions.image" . }}'
      imagePullPolicy: '{{ .Values.image.pullPolicy }}'
      resources:
        limits:
          cpu: '1'
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 128Mi
      command:
        - /bin/sh
        - -ec
        - |
          mkdir -p {{ .Values.primary.persistence.mountPath }}/data
          chmod 700 {{ .Values.primary.persistence.mountPath }}/data
      securityContext:
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
        privileged: false
      volumeMounts:
        - name: data
          mountPath: '{{ .Values.primary.persistence.mountPath }}'
        - name: dshm
          mountPath: /dev/shm
  volumePermissions:
    image:
      repository: kubernetes/bitnami/bitnami-shell
      tag: 11-debian-11-r20
  metrics:
    enabled: true
    image:
      repository: kubernetes/bitnami/postgres-exporter
      tag: 0.10.1-debian-11-r20
    containerSecurityContext:
      enabled: true
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
      privileged: false
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: /metrics
      prometheus.io/match_metrics: 'true'
    resources:
      limits:
        cpu: '2'
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 128Mi
  networkPolicy:
    enabled: true
    ingressRules:
      primaryAccessOnlyFrom:
        enabled: true
        podSelector: {}
    metrics:
      enabled: true
      namespaceSelector:
        app.kubernetes.io/name: prometheus
